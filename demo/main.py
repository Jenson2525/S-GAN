import gan
import numpy as np
import pandas as pd

matplotlib_is_available = True
try:
  from matplotlib import pyplot as plt
except ImportError:
  print("Will skip plotting; matplotlib is not available.")
  matplotlib_is_available = False

#data
std_mode1 = [1054.808452, 9.49422053, 801.2814118, 1873.996654, 0.17833864, 1600145.244, 10742.7906, 250452.7436, 834490.2758, 623704.0176, 
             1817.64809, 924.561413, 237.2751713, 456.8861972, 183.1639285, 0.09107891, 0.06467499, 0.07259376, 0.19545941, 1.45722931]
std_mode2 = [3503.656598, 16.73427222, 463.3978764, 888.686235, 0.09641739, 1785039.698, 8790.133176, 74024.07278, 473805.6462, 355479.1972, 
             950.4976802, 243.6873126, 136.8570057, 660.7315945, 20.08581589, 0.01003609, 0.05991716, 0.05162795, 0.24119883, 1.05320524]
std_mode3 = [767.8517044, 16.1482004, 318.3100188, 478.8136041, 0.07869475, 1371645.814, 16763.30132, 60957.53826, 1137585.367, 317718.0468, 
             516.6441595, 209.8217654, 9.80752262, 413.1833733, 93.378263, 0.04802846, 0.06286598, 0.0397433, 0.22304658, 0.61956643]
std_mode4 = [1614.066182, 5.26071783, 627.2026624, 2125.590236, 0.1994652, 1538868.991, 14616.10815, 226915.1074, 1106114.178, 389738.9224, 
             2034.221494, 417.9734899, 151.7359582, 1481.043592, 83.30595809, 0.05505604, 0.05725729, 0.05696278, 0.20229082, 1.2438386]
std_mode5 = [1189.840135, 5.77269117, 636.9861047, 1288.190669, 0.16346116, 7600955.836, 12397.81233, 134808.7366, 921987.7462, 526343.3246, 
             1280.358828, 560.199904, 120.0831438, 806.5033576, 112.5528791, 0.04811294, 0.07814357, 0.07839367, 0.2648145, 1.233527]

mean_mode1 = [2019.714286, 9.33625, 1395.063895, 2518.508957, 0.62507906, 1529709.188, 19930.68864, 258544.75, 688830.6875, 547814.9375, 
              2424.444444, 743.6910526, 108.4210526, 357.9473684, 124.4444444, 0.06104722, 0.12394656, 0.1496675, 0.15141794, 2.38360961]
mean_mode2 = [4658, 10.96, 988.3656603, 1441.277317, 0.72681167, 2397556.667, 25731.5, 111090.5, 587994.8333, 526988, 
              1792.4, 475.1671429, 101.4, 698.6, 18.4, 0.0091054, 0.1757148, 0.224751, 0.3272256, 2.7398336]
mean_mode3 = [1663.4, 13.268, 1222.70284, 1592.746916, 0.7803492, 1946830.75, 30488.25, 170908.25, 1230188, 545734, 
              1634.25, 336.395, 7.75, 370, 176, 0.10481625, 0.15428, 0.16676, 0.22042725, 1.4949245]
mean_mode4 = [1713.166667, 6.02454545, 1106.288257, 2252.959462, 0.62056738, 1860531.692, 29898.50364, 253762.5385, 992193.3077, 614583.6154, 
              2385.357143, 456.3392857, 102.6428571, 901.8571429, 89.78571429, 0.05580843, 0.16919657, 0.19869436, 0.28954986, 2.60503543]
mean_mode5 = [1902.05, 7.22648649, 1214.092898, 2124.49318, 0.58722149, 2894458.182, 22105.64252, 177048.6364, 727260.4545, 449652.4242, 
              2196.575758, 521.2148485, 79.90909091, 750.3030303, 107.6969697, 0.04926576, 0.17259458, 0.20100139, 0.32429745, 1.75234709]

sample_num = [250, 100, 100, 150, 400]
len = 20

#result
result_mode1 = []
result_mode2 = []
result_mode3 = []
result_mode4 = []
result_mode5 = []

#mode4
print("\n")
print("generating the data of mode5...")
sample = sample_num[4]
for index in range(len):
    data_mean = mean_mode5[index]
    data_stddv = std_mode5[index]

    #train and get results
    results = gan.train(data_mean, data_stddv, sample)
    result_mode5 = np.append(result_mode5, results, axis = 0)
    print("attribute %d has accomplished" %(index + 1))

print("the data of mode5 has generated")
result_mode5 = np.reshape(result_mode5, (-1, sample))
result_mode5 = np.transpose(result_mode5)

#save the data
print("saving the data...")
mode5_data = pd.DataFrame(result_mode5)
writer = pd.ExcelWriter('mode5.xlsx')
mode5_data.to_excel(writer, 'sheet1', float_format = '%.5f')
writer.save()
writer.close()
print('done')

'''
results = gan.train(mean[0], std[0], sample_num[0])
if matplotlib_is_available:
    print("Plotting the generated distribution...")
    values = results
    print(" Values: %s" % (str(values)))
    plt.hist(values, bins=10)
    plt.xlabel('Value')
    plt.ylabel('Count')
    plt.title('Histogram of Generated Distribution')
    plt.grid(True)
    plt.show()
'''